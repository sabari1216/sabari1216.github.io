{"version":3,"sources":["./src/app/detailed-history/detailed-history.component.ts","./src/app/detailed-history/detailed-history.component.html","./src/app/room-details/room-details.component.ts","./src/app/room-details/room-details.component.html","./src/environments/environment.ts","./src/app/vacate/vacate.component.ts","./src/app/vacate/vacate.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/book-room/book-room.component.ts","./src/app/book-room/book-room.component.html","./src/app/current-bookings/current-bookings.component.ts","./src/app/current-bookings/current-bookings.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/booking-history/booking-history.component.ts","./src/app/booking-history/booking-history.component.html","./src/app/rooms.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { RoomsService } from '../rooms.service';\n\n@Component({\n  selector: 'app-detailed-history',\n  templateUrl: './detailed-history.component.html',\n  styleUrls: ['./detailed-history.component.css']\n})\nexport class DetailedHistoryComponent implements OnInit {\n\n  billNo:Number\n  customerHistory=[];\n  errorMessage:String=null;\n\n  constructor(private service:RoomsService,private route:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(param => this.billNo = param['billNo']);\n    this.fetchDetailedBookingHistory()\n  }\n\n  fetchDetailedBookingHistory(){\n    this.customerHistory=[]\n    this.errorMessage=null;\n    this.service.fetchVacatedDetailsByBillNo(this.billNo).subscribe(\n      (data)=>{\n        data.forEach(element => {\n          element.vacatedDetails.forEach(element1 => {\n            this.customerHistory.push(element1)\n            // console.log(this.customerHistory);\n               \n          });\n        });    \n      },\n      (error)=>{\n        this.errorMessage=error.error.message\n      }\n    )\n  }\n}\n","<br><br>\n<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n            <div class=\"card\" *ngFor=\"let history of customerHistory\">\n                <div class=\"card-header\">\n                    <h1 class=\"text-center\">Customer History</h1>\n                </div>\n                <div class=\"card-body\">\n                    <div >\n                        <table class=\"table  table-bordered\">\n                            <tbody>\n                                <tr>\n                                    <th>Bill No</th>\n                                    <th>{{history.billNo}}</th>\n                                </tr>\n                                <tr>\n                                    <th>Customer Name</th>\n                                    <td>{{history.bookings[0].customerName}}</td>\n                                </tr>\n                                <tr>\n                                    <th><br> <br> Customer Address</th>\n                                    <td>\n                                        <span style=\"font-weight: bold;\">Street:</span>&nbsp;<span>{{history.bookings[0].customerAddress.street}}</span>\n                                        <br>\n                                        <br>\n                                        <span style=\"font-weight: bold;\">City:</span>&nbsp; <span>{{history.bookings[0].customerAddress.city}}</span>\n                                        <br>\n                                        <br>\n                                        <span style=\"font-weight: bold;\">Pincode:</span>&nbsp; <span>{{history.bookings[0].customerAddress.zip}}</span>\n                                    \n                                    </td>\n                                    \n                                </tr>\n                                <tr>\n                                    <th>Customer Phone</th>\n                                    <td>{{history.bookings[0].customerPhone}}</td>\n                                </tr>\n                                <tr>\n                                    <th> <br> Check In</th>\n                                    <td>\n                                        <span style=\"font-weight: bold;\">Date:</span>&nbsp;<span>{{history.bookings[0].checkinDate |date}}</span>\n                                        <br>\n                                        <br>\n                                        <span style=\"font-weight: bold;\">Time:</span>&nbsp;<span>{{history.bookings[0].checkinDate |date:'hh:mm:ss a'}}</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th> <br> Check Out</th>\n                                    <td>\n                                        <span style=\"font-weight: bold;\">Date:</span>&nbsp;<span>{{history.checkOutDate |date}}</span>\n                                        <br>\n                                        <br>\n                                        <span style=\"font-weight: bold;\">Time:</span>&nbsp;<span>{{history.checkOutDate |date:'hh:mm:ss a'}}</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th>No Of Days Stayed</th>\n                                    <td>{{history.noOfDaysStayed}}</td>\n                                </tr>\n                                <tr>\n                                    <th>Room Number</th>\n                                    <td>{{history.bookings[0].roomNum}}</td>\n                                </tr>\n                                <tr>\n                                    <th>Advance Received</th>\n                                    <td>{{history.bookings[0].advance |currency :'INR'}}</td>\n                                </tr>\n                                <tr>\n                                    <th>Total Amount Paid</th>\n                                    <td>{{history.amountPaid |currency :'INR'}}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        \n                    </div>\n                </div>\n                <div class=\"card-footer text-center\">\n                    <button class=\"btn btn-dark\" [routerLink]=\"['/booking-history']\">Back</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-room-details',\n  templateUrl: './room-details.component.html',\n  styleUrls: ['./room-details.component.css']\n})\nexport class RoomDetailsComponent implements OnInit {\n\n  @Input() roomDetails;\n  booked:boolean;\n  constructor(private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  redirect(roomNo){\n    this.router.navigate(['book-room',roomNo])\n    \n  }\n\n  // myStyle(status){\n  //   console.log(status);\n    \n  //   if(status==='Booked'){\n  //     this.booked=true;\n  //   }\n  //   let style={\n  //     'background-color':this.booked?'red':'green'\n  //   }\n  //   return style;\n  // }\n  \n\n\n}\n\n\n\n","\n<div class=\"container-fluid\">\n    <div class=\"row\" >\n        <div class=\"col-md-3 pt-3\"  *ngFor=\"let room of roomDetails\" >\n                <div class=\"card\" >\n                    <div class=\"card-header\">\n                        <h1 class=\"display-1 text-center\">{{room.roomNo}}</h1>\n                    </div>\n                    <div class=\"card-body text-center\">\n                       \n                        <div>\n                            <p>Room Type: <span>{{room.roomType}}</span> </p>\n                        </div>\n                        <div>\n                            <p>Room Rent: <span>{{room.roomRent |currency:'INR'}}</span> </p>\n                        </div>\n                        <div >\n                            <p>Room Status: <span [style.color]=\"room.roomStatus=='Booked' ? 'red' : 'green'\" >{{room.roomStatus}}</span></p>\n                        </div>\n                    </div>\n                    <div class=\"card-footer\">\n                        <div *ngIf=\"room.roomStatus==='Booked'\">\n                            <button [disabled]=\"room.roomStatus==='Booked'\" class=\"btn btn-danger btn-block\">Booked</button>\n                        </div>\n\n                        <div *ngIf=\"room.roomStatus==='Not Booked'\">\n                            <button [disabled]=\"room.roomStatus==='Booked'\" (click)=\"redirect(room.roomNo)\" class=\"btn btn-success btn-block\">Book</button>\n                        </div>\n                       \n                        \n                    </div>\n                </div>\n            \n            \n        </div>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RoomsService } from '../rooms.service';\n\n@Component({\n  selector: 'app-vacate',\n  templateUrl: './vacate.component.html',\n  styleUrls: ['./vacate.component.css']\n})\nexport class VacateComponent implements OnInit {\n\n  roomNum:Number;\n  bookings=[]\n  noOfDaysStayed:any;\n  date;\n  roomRent:any\n  totalBill:any;\n  showContent:boolean=false;\n  advance;\n  checkOutDate=new Date();\n  successMessage:String=null;\n  errorMessage:String=null\n  constructor(private route:ActivatedRoute,private service:RoomsService,private router:Router) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(param => this.roomNum = param['roomNo']);\n    this.fetchBookingsByRoom()\n  }\n\n  fetchBookingsByRoom(){\n    this.bookings=[]\n  \n    this.service.fetchCurrentBookingsByRoom(this.roomNum).subscribe(\n      (data)=>{\n        data.forEach(element => {\n          this.roomRent=element.roomRent;\n          if(element.bookings.length>0){\n          this.bookings.push(element.bookings[0])\n          console.log(this.bookings);\n         this.date=this.bookings[0].checkinDate\n          this.noOfDaysStayed= Math.ceil((this.checkOutDate.getTime()-new Date(this.date).getTime()) / (1000 * 60 * 60 * 24))\n          \n         }\n\n        });\n      },\n      (error)=>{\n        console.log(error);\n        \n      }\n    )\n  }\n\n  billCalculation(){\n    this.showContent=true;\n    this.advance=this.bookings[0].advance\n    if(this.advance){\n      this.totalBill=((this.roomRent*this.noOfDaysStayed)-this.advance)\n    }\n    else{\n      this.totalBill=(this.roomRent*this.noOfDaysStayed)\n    }\n    \n  }\n\n  vacate(){\n    this.successMessage=null;\n    this.errorMessage=null;\n    let vacateDetails={\n      \"checkOutDate\":this.checkOutDate,\n      \"noOfDaysStayed\":this.noOfDaysStayed,\n      \"amountPaid\":this.totalBill\n    }\n\n    this.service.updateVacatedDetails(this.roomNum,vacateDetails).subscribe(\n      (success)=>{\n        this.successMessage=success.message;\n        alert(this.successMessage)\n        this.router.navigate(['/dashboard'])\n      },\n      (error)=>{\n        this.errorMessage=error.error.message;\n        alert(this.errorMessage)\n      }\n    )\n  }\n\n  back(){\n    this.showContent=false;\n  }\n\n}\n","<br> <br>\n<div class=\"container-fluid\">\n    <div class=\"row\" *ngIf=\"!showContent\">\n        <div class=\"col-md-12\" *ngFor=\"let booking of bookings\">\n            <div class=\"card\">\n                <div class=\"card-header text-center\">\n                    <h1 class=\"h1\"><u>Room Summary For {{booking.roomNum}}</u> </h1>\n                </div>\n                <div class=\"card-body\">\n                    <div>\n                        <table class=\"table table-sm\">\n                            <thead>\n                                <th>Booking Id</th>\n                                <th>Customer Name</th>\n                                <th>Advance</th>\n                                <th>Checkin Date</th>\n                                <th>Customer Phone</th>\n                                <th>No Of Days Staying</th>\n                            </thead>\n                            <tbody>\n                                <td>{{booking.bookingId}}</td>\n                                <td>{{booking.customerName}}</td>\n                                <td>{{booking.advance |currency:'INR'}}</td>\n                                <td>{{booking.checkinDate | date}}</td>\n                                <td>{{booking.customerPhone}}</td>\n                                <td>{{noOfDaysStayed}}</td>\n                            </tbody>\n                        </table>\n                    </div>\n                    \n                </div>\n                <div class=\"card-footer text-center\">\n                    <button (click)=\"billCalculation()\" class=\"btn btn-primary \">Generate Bill</button>\n                    &nbsp;&nbsp;\n                    <button class=\"btn btn-dark\" [routerLink]=\"['/bookings']\">Back</button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row\" *ngIf=\"showContent\">\n        <div class=\"col-md-6 offset-md-3\" *ngFor=\"let booking of bookings\">\n            <div class=\"card\">\n                <div class=\"card-header text-center\">\n                    <h1>Bill</h1>\n                </div>\n                <div class=\"card-body\">\n                    <table class=\"table table-bordered\">\n                        <tbody>\n                            <tr>\n                                <th>Customer Name</th>\n                                <td>{{booking.customerName}}</td>\n                            </tr>\n                            <tr>\n                                <th>Check In Date-Time</th>\n                                <td>{{booking.checkinDate | date}} &nbsp; - &nbsp;{{booking.checkinDate | date:'hh:mm:ss a'}}</td>\n                            </tr>\n                            <tr>\n                                <th>Check Out Date-Time</th>\n                                <td>{{checkOutDate | date}}&nbsp; - &nbsp;{{checkOutDate | date:'hh:mm:ss a'}}</td>\n                            </tr> \n                            <tr>\n                                <th>No Of Days Stayed</th>\n                                <td>{{noOfDaysStayed}}</td>\n                            </tr>\n                            <tr>\n                                <th>Room Rent</th>\n                                <td>{{roomRent |currency:'INR'}}</td>\n                            </tr> \n                            <tr>\n                                <th>Advance Received</th>\n                                <td>{{booking.advance |currency:'INR'}}</td>\n                            </tr> \n                        </tbody>\n                    </table>\n                    <div class=\"text-center\">\n                        <h2> Total Bill : {{totalBill |currency:'INR'}}</h2>\n                    </div>\n                </div>\n                <div class=\"card-footer text-center\">\n                    <button class=\"btn btn-success\" (click)=\"vacate()\">Check Out</button>\n                    &nbsp;\n                    <button class=\"btn btn-dark\" (click)=\"back()\">Back</button>\n                </div>\n            </div>\n        </div>\n    </div>\n        \n   \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { RoomsService } from '../rooms.service';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n\n})\nexport class DashboardComponent implements OnInit {\n\n  categories=['Single Room','Double Room','Delux Room']\n  rooms=[]\n  errorMessage:String=null;\n  \n\n  constructor(private service:RoomsService) { }\n\n  ngOnInit(): void {\n   \n  }\n\n  viewRoomsByCategory(categorySelected:String){\n    this.errorMessage=null;\n    this.rooms=[]\n  \n    this.service.fetchProductsByCategory(categorySelected).subscribe(\n      (data)=>{\n       this.rooms=data\n        \n      },\n      (error)=>{\n        this.errorMessage=\"Sorry no data available at the moment\"\n      \n      }\n    \n    )\n   \n    \n  }\n  \n\n}\n","<mat-tab-group mat-stretch-tabs (selectedTabChange)=\"viewRoomsByCategory($event.tab.textLabel)\">\n    <mat-tab *ngFor=\"let tab of categories\" [label]=\"tab\" value=\"tab\">\n        <div *ngIf=\"rooms.length==0 && !errorMessage\">\n            <img src=\"../../assets/facebook_cover_photo_1.jpg\" alt=\"\" height=\"500px\" width=\"100%\">\n        </div>\n        <div *ngIf=\"errorMessage\"  class=\"text-center\">\n          \n           <p class=\"alert alert-danger\">{{errorMessage}} </p> \n        </div>\n    \n        <div *ngIf=\"rooms.length>0 \" >  \n            <app-room-details [roomDetails]=\"rooms\"></app-room-details>\n        </div>\n      \n    </mat-tab>\n   \n</mat-tab-group>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'sundarLodge';\n}\n","<mat-toolbar class=\"bg-dark\">\n  <a [routerLink]=\"['']\"><img src=\"../assets/facebook_cover_photo_1.png\" alt=\"logo\" height=\"50px\" width=\"150px\"></a>\n\n  <span class=\"example-spacer\"></span>\n\n  <button mat-flat-button [routerLink]=\"['/bookings']\">Bookings</button>\n  &nbsp;\n  <button mat-flat-button [routerLink]=\"['/booking-history']\">Booking History</button>\n</mat-toolbar>\n\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormControlName, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RoomsService } from '../rooms.service';\n\n@Component({\n  selector: 'app-book-room',\n  templateUrl: './book-room.component.html',\n  styleUrls: ['./book-room.component.css']\n})\nexport class BookRoomComponent implements OnInit {\n  successMessage:String=null;\n  errorMessage:String=null;\n  roomNum\n  bookingForm:FormGroup;\n  name=new FormControl('',[Validators.required,Validators.pattern(/^[A-Za-z. ]+$/)])\n  phone = new FormControl('',[Validators.required,validatePhone])\n  street=new FormControl('',Validators.required)\n  zip=new FormControl('',[Validators.pattern(/^[0-9]{6}$/)])\n  city=new FormControl('',[Validators.required])\n  noOfPersons=new FormControl('',[Validators.required,Validators.min(1),Validators.max(4)])\n  checkIn=new FormControl('',[Validators.required])\n  advance=new FormControl('')\n  \n\n  constructor(private fb:FormBuilder,private route: ActivatedRoute,private service:RoomsService,private router:Router) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(param => this.roomNum = param['roomNo']);\n    this.bookingForm=this.fb.group({\n      customerName:this.name,\n      customerPhone:this.phone,\n      customerAddress:this.fb.group({\n        street:this.street,\n        zip:this.zip,\n        city:this.city\n      }),\n      roomNum:[parseInt(this.roomNum)],\n      noOfPersons:this.noOfPersons,\n      checkIn:this.checkIn,\n      advance:this.advance\n    })\n  }\n\n book(){\n    this.successMessage=null;\n    this.errorMessage=null;\n    this.service.updateBookings(this.bookingForm.value).subscribe(\n      (success)=>{\n        this.successMessage=success.message\n        alert(this.successMessage)\n        this.router.navigate(['dashboard'])\n      },\n      (error)=>{\n        this.errorMessage=error.error.message;\n        alert(this.errorMessage)\n      }\n    )\n   \n    \n    \n  }\n    \n \n    // console.log(this.bookingForm.get('customerAddress')['controls'].street.errors);\n    \n\n\n}\n\nlet validatePhone = (control: FormControl) =>{\n  let phoneNo = \"\" + control.value; // converting integer value to string\n  if(phoneNo && phoneNo.length!=10){\n    return {lengthError : { message : \"Phone number should be of 10 digits\"}};\n  }\n  else if (phoneNo && !phoneNo.match(/^[9,6,8,7][0-9]+$/) ){\n    return {typeError : { message  : \"Enter valid mobile number\"}}\n  }\n  else{\n    return null;\n  }\n}\n\n\n\n","<br><br><br>\n<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-6 offset-md-3\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    <h2 class=\"mat-h2 text-center\">Booking Form</h2>\n                </div>\n                <div class=\"card-body\">\n                    <form [formGroup]=\"bookingForm\" align=\"center\">\n                        <mat-form-field appearance=\"standard\">\n                            <mat-label>Room No</mat-label>\n                            <input matInput disabled [value]=\"roomNum\">\n                        </mat-form-field>\n\n                        <br>\n\n                        <mat-form-field appearance=\"standard\">\n                            <mat-label>Name</mat-label>\n                            <input matInput type=\"text\" placeholder=\"Enter your Name\" [formControl]=\"name\" required>\n                            <mat-error\n                                *ngIf=\"bookingForm.controls.customerName.errors?.required && bookingForm.controls.customerName.dirty\">\n                                This field can't be blank</mat-error>\n                            <mat-error\n                                *ngIf=\"bookingForm.controls.customerName.dirty && bookingForm.controls.customerName.errors?.pattern\">\n                                Name Should Only Contain Characters</mat-error>\n\n                        </mat-form-field>\n\n                        <br>\n\n                        <mat-form-field appearance=\"standard\">\n                            <mat-label>Phone Number</mat-label>\n                            <input matInput type=\"number\" placeholder=\"Enter your Phone Number\" [formControl]=\"phone\"\n                                required>\n                            <mat-error *ngIf=\"phone.hasError('required')\">This field can't be blank</mat-error>\n                            <mat-error\n                                *ngIf=\"phone.hasError('lengthError') && !phone.hasError('typeError') && !phone.hasError('required')\">\n                                {{phone.errors.lengthError.message}}</mat-error>\n                            <mat-error\n                                *ngIf=\"phone.hasError('typeError') && !phone.hasError('required') && !phone.hasError('lengthError')\">\n                                {{phone.errors.typeError.message}}</mat-error>\n                        </mat-form-field>\n\n                        <br>\n\n                        <mat-form-field appearance=\"standard\">\n                            <mat-label>Street</mat-label>\n                            <input matInput type=\"text\" placeholder=\"Enter Street Name\" [formControl]=\"street\" required>\n                            <mat-error\n                                *ngIf=\"bookingForm.get('customerAddress')['controls'].street.errors?.required && bookingForm.get('customerAddress')['controls'].street.dirty\">\n                                This field can't be blank</mat-error>\n                        </mat-form-field>\n\n                        <br>\n\n                        <mat-form-field appearance=\"standard\">\n                            <mat-label>City</mat-label>\n                            <input matInput type=\"text\" placeholder=\"Enter City\" [formControl]=\"city\" required>\n                            <mat-error\n                                *ngIf=\"bookingForm.get('customerAddress')['controls'].city.errors?.required && bookingForm.get('customerAddress')['controls'].city.dirty\">\n                                This field can't be blank</mat-error>\n                        </mat-form-field>\n\n                        <br>\n\n                        <mat-form-field appearance=\"standard\">\n                            <mat-label>Pincode</mat-label>\n                            <input matInput type=\"text\" placeholder=\"Enter Picode\" [formControl]=\"zip\" required>\n                            <mat-error\n                                *ngIf=\"bookingForm.get('customerAddress')['controls'].zip.errors?.required && bookingForm.get('customerAddress')['controls'].zip.dirty\">\n                                This field can't be blank</mat-error>\n                            <mat-error\n                                *ngIf=\"bookingForm.get('customerAddress')['controls'].zip.dirty && bookingForm.get('customerAddress')['controls'].zip.errors?.pattern\">\n                                Pincode Should Contain Only Numbers</mat-error>\n                        </mat-form-field>\n\n                        <br>\n                        \n                        <mat-form-field appearance=\"standard\">\n                            <mat-label>Number Of Persons</mat-label>\n                            <input matInput type=\"number\" placeholder=\"Enter Number Of Persons\"\n                                [formControl]=\"noOfPersons\" required min=\"1\">\n                            <mat-error\n                                *ngIf=\"bookingForm.controls.noOfPersons.errors?.required && bookingForm.controls.noOfPersons.dirty\">\n                                This field can't be blank</mat-error>\n                            <mat-error\n                                *ngIf=\"bookingForm.controls.noOfPersons.dirty && bookingForm.controls.noOfPersons.errors?.min\">\n                                Minimum 1 Person Required </mat-error>\n                            <mat-error\n                                *ngIf=\"bookingForm.controls.noOfPersons.dirty && bookingForm.controls.noOfPersons.errors?.max\">\n                                Maximum 4 Persons Only Allowed</mat-error>\n                        </mat-form-field>\n\n                        <br>\n\n                        <mat-form-field>\n                            <mat-label>Advance(optional)</mat-label>\n                            <input matInput type=\"number\" placeholder=\"Enter Advance Received\"\n                                [formControl]=\"advance\" min=\"0\">\n                        </mat-form-field>\n\n                        <br>\n\n                        <mat-form-field>\n                            <mat-label>Check In Time</mat-label>\n                            <input matInput type=\"datetime-local\" [formControl]=\"checkIn\" required>\n                        </mat-form-field>\n\n                        <br>\n\n                        <button (click)=\"book()\" class=\"btn btn-primary btn-block\">Book</button>\n                    </form>\n\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RoomsService } from '../rooms.service';\n\n@Component({\n  selector: 'app-current-bookings',\n  templateUrl: './current-bookings.component.html',\n  styleUrls: ['./current-bookings.component.css']\n})\nexport class CurrentBookingsComponent implements OnInit {\n  bookings=[]\n  constructor(private service:RoomsService,private router:Router) { }\n\n  ngOnInit(): void {\n    this.bookings=[]\n    this.service.fetchCurrentBookings().subscribe(\n      (data)=>{\n        data.forEach(element => {\n         if(element.bookings.length>0){\n          this.bookings.push(element.bookings[0])\n         }\n\n        });\n      },\n      (error)=>{\n        console.log(error);\n\n        \n        \n      }\n    )\n  }\n\n  vacate(roomNo){\n    this.router.navigate(['/vacate-room',roomNo])\n  }\n\n}\n","<br><br>\n<div class=\"container-fluid\">\n    <div class=\"row\" *ngIf=\"bookings.length==0\">\n        <div class=\"col-md-6 offset-md-3\">\n            <div  class=\"text-center\">\n                <h1 >No Bookings Done!!</h1>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-6 \" *ngFor=\"let booking of bookings\">\n            <div class=\"card\" >\n                <div class=\"card-header text-center\">\n                    <h1>{{booking.roomNum}}</h1>\n                </div>\n                <div class=\"card-body \">\n                    <table class=\"table  table-responsive\">\n                        <thead>\n                            <tr>\n                                <th>Booking Id</th>\n                                <th>customer Name</th>\n                                <th>Date</th>\n                                <th>Time</th>\n                                <th>Mobile Number</th>\n                                <th>City</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>{{booking.bookingId}}</td>\n                                <td>{{booking.customerName}}</td>\n                                <td>{{booking.checkinDate | date}}</td>\n                                <td>{{booking.checkinDate |date:'hh:mm:ss a'}}</td>\n                                <td>{{booking.customerPhone}}</td>\n                                <td>{{booking.customerAddress.city}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n\n                </div>\n                <div class=\"card-footer text-center\">\n                    <button class=\"btn btn-danger\" (click)=\"vacate(booking.roomNum)\">Vacate</button>\n                    &nbsp; &nbsp;\n                    <button class=\"btn btn-dark\" [routerLink]=\"['/dashboard']\">Back</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\n//angular modules\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule} from '@angular/material/tooltip'; // to add tooltip\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { RoomsService } from './rooms.service';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { BookRoomComponent } from './book-room/book-room.component';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { CurrentBookingsComponent } from './current-bookings/current-bookings.component';\nimport { VacateComponent } from './vacate/vacate.component';\nimport { BookingHistoryComponent } from './booking-history/booking-history.component';\nimport { DetailedHistoryComponent } from './detailed-history/detailed-history.component';\n// import { NgxMaterialTimepickerModule } from 'ngx-material-timepicker'\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    RoomDetailsComponent,\n    BookRoomComponent,\n    CurrentBookingsComponent,\n    VacateComponent,\n    BookingHistoryComponent,\n    DetailedHistoryComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSliderModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatTabsModule,\n    HttpClientModule ,\n    MatProgressSpinnerModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    FormsModule\n   \n\n  ],\n  providers: [RoomsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BookRoomComponent } from './book-room/book-room.component';\nimport { BookingHistoryComponent } from './booking-history/booking-history.component';\nimport { CurrentBookingsComponent } from './current-bookings/current-bookings.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { DetailedHistoryComponent } from './detailed-history/detailed-history.component';\nimport { VacateComponent } from './vacate/vacate.component';\n\nconst routes: Routes = [\n  { path: 'dashboard', component:DashboardComponent  },\n  { path: 'book-room/:roomNo', component:BookRoomComponent  },\n  { path: 'bookings', component:CurrentBookingsComponent  },\n  { path: 'vacate-room/:roomNo', component:VacateComponent },\n  { path: 'booking-history',component:BookingHistoryComponent},\n  {path:'customer-history/:billNo',component:DetailedHistoryComponent},\n  { path: '**', redirectTo: '/dashboard', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RoomsService } from '../rooms.service';\n\n@Component({\n  selector: 'app-booking-history',\n  templateUrl: './booking-history.component.html',\n  styleUrls: ['./booking-history.component.css']\n})\nexport class BookingHistoryComponent implements OnInit {\n\n  vacatedDetails=[];\n  errorMessage:String=null;\n  constructor(private service:RoomsService,private router:Router) { }\n\n  ngOnInit(): void {\n    this. fetchVacatedDetails()\n  }\n\n  fetchVacatedDetails(){\n    this.errorMessage=null;\n    this.vacatedDetails=[];\n    this.service.fetchVacatedDetails().subscribe(\n      (data)=>{\n        data.forEach(element => {\n          element.vacatedDetails.forEach(element1 => {\n            this.vacatedDetails.push(element1)   \n          });\n        });    \n      },\n      (error)=>{\n        this.errorMessage=error.error.message\n      }\n    )\n  }\n\n  history(billNo){\n    this.router.navigate(['customer-history',billNo])\n  }\n\n}\n","<br><br>\n<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"card\">\n                <div class=\"card-header text-center\">\n                    <h1>Booking History</h1>\n                </div>\n                <div class=\"card-body\" >\n                    <table class=\"table  table-sm table-bordered \">\n                        <thead class=\"text-center\">\n                            <th>S.No</th>\n                            <th>Bill Number</th>\n                            <th>Name</th>\n                            <th>Check Out Date</th>\n                            <th>Amount</th>\n                        </thead>\n                        <tbody *ngFor=\"let vacated of vacatedDetails; let i=index\" class=\"text-center\">\n                            <td>{{i+1}}</td>\n                            <td><button class=\"btn btn-dark btn-sm\" (click)=\"history(vacated.billNo)\">{{vacated.billNo}}</button></td>\n                            <td>{{vacated.bookings[0].customerName}}</td>\n                            <td>{{vacated.checkOutDate | date}}</td>\n                            <td>{{vacated.amountPaid |currency:'INR'}}</td>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoomsService {\n\n  constructor(private http:HttpClient) { }\n\n  url=\"http://localhost:1050/\"\n\n  fetchProductsByCategory(category):Observable<any>{\n    return this.http.get<any>(this.url+\"room/\"+category)\n  }\n\n  updateBookings(formData):Observable<any>{\n    return this.http.put<any>(this.url+\"bookRoom\",formData)\n  }\n\n  fetchCurrentBookings():Observable<any>{\n    return this.http.get<any>(this.url+\"bookings\")\n  }\n\n  fetchCurrentBookingsByRoom(roomNo):Observable<any>{\n    return this.http.get<any>(this.url+\"bookings/\"+roomNo)\n  }\n\n  updateVacatedDetails(roomNo,vacateDetails):Observable<any>{\n    return this.http.put<any>(this.url+\"updateHistory/\"+roomNo,vacateDetails)\n  }\n\n  fetchVacatedDetails():Observable<any>{\n    return this.http.get<any>(this.url+\"vacatedDetails\")\n  }\n\n  fetchVacatedDetailsByBillNo(billNo):Observable<any>{\n    return this.http.get<any>(this.url+\"vacatedDetails/\"+billNo)\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}